---
- name: Ubuntu 24 specific configurations
  hosts: ser
  become: true
  gather_facts: true

  pre_tasks:
    - name: Ensure required collections are present (run on control node)
      ansible.builtin.command: >
        ansible-galaxy collection install
        ansible.posix
        community.general
      changed_when: false
      run_once: true
      delegate_to: localhost
      become: false

  tasks:
    - block:
        # ---- base packages ----
        - name: Install required packages for Ubuntu 24
          ansible.builtin.apt:
            name:
              - curl
              - wget
              - gnupg
              - lsb-release
              - ca-certificates
              - software-properties-common
              - apt-transport-https
            state: present
            update_cache: true

        # ---- DNS via systemd-resolved ----
        - name: Ensure systemd-resolved is enabled and running
          ansible.builtin.systemd:
            name: systemd-resolved
            enabled: true
            state: started

        - name: Configure systemd-resolved for better DNS resolution
          ansible.builtin.copy:
            dest: /etc/systemd/resolved.conf
            content: |
              [Resolve]
              DNS=192.168.88.1
              FallbackDNS=8.8.8.8 1.1.1.1
              DNSSEC=no
              DNSOverTLS=no
              MulticastDNS=no
              LLMNR=no
              Cache=yes
              DNSStubListener=yes
              ReadEtcHosts=yes
            backup: yes

        - name: Restart systemd-resolved
          ansible.builtin.systemd:
            name: systemd-resolved
            state: restarted

        # ---- time sync ----
        - name: Ensure timezone is set
          community.general.timezone:
            name: UTC

        - name: Install chrony
          ansible.builtin.apt:
            name: chrony
            state: present
            update_cache: true

        - name: Configure chrony
          ansible.builtin.copy:
            dest: /etc/chrony/chrony.conf
            content: |
              pool 0.pool.ntp.org iburst
              pool 1.pool.ntp.org iburst
              pool 2.pool.ntp.org iburst
              pool 3.pool.ntp.org iburst
              driftfile /var/lib/chrony/drift
              makestep 1.0 3
              rtcsync
              logdir /var/log/chrony
            backup: yes

        - name: Start and enable chrony
          ansible.builtin.systemd:
            name: chrony
            state: started
            enabled: true

        # ---- kernel modules ----
        - name: Ensure kernel modules are loaded now (k8s essentials)
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop:
            - br_netfilter
            - overlay

        - name: Ensure conntrack module is loaded
          community.general.modprobe:
            name: nf_conntrack
            state: present

        - name: Ensure kernel modules load on boot
          ansible.builtin.copy:
            dest: /etc/modules-load.d/k8s.conf
            content: |
              br_netfilter
              overlay
              nf_conntrack
            backup: yes

        # ---- wait for nf_conntrack sysctl to appear (after module load) ----
        - name: Check if nf_conntrack_max sysctl is present
          ansible.builtin.stat:
            path: /proc/sys/net/netfilter/nf_conntrack_max
          register: nf_conntrack_sysctl

        - name: Wait for nf_conntrack_max to appear (up to 5s)
          ansible.builtin.wait_for:
            path: /proc/sys/net/netfilter/nf_conntrack_max
            state: present
            timeout: 5
          when: not nf_conntrack_sysctl.stat.exists

        # ---- sysctl tuning (generic) ----
        - name: Configure sysctl for Kubernetes (generic)
          ansible.posix.sysctl:
            name: "{{ item.name }}"
            value: "{{ item.value }}"
            state: present
            reload: true
          loop:
            - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
            - { name: 'net.ipv4.ip_forward', value: '1' }
            - { name: 'net.ipv6.conf.all.disable_ipv6', value: '1' }
            - { name: 'net.ipv6.conf.default.disable_ipv6', value: '1' }
            - { name: 'vm.swappiness', value: '0' }
            - { name: 'vm.overcommit_memory', value: '1' }
            - { name: 'vm.panic_on_oom', value: '0' }
            - { name: 'fs.inotify.max_user_instances', value: '8192' }
            - { name: 'fs.inotify.max_user_watches', value: '1048576' }
            - { name: 'fs.file-max', value: '52706963' }
            - { name: 'fs.nr_open', value: '52706963' }

        # ---- sysctl tuning (conntrack) ----
        - name: Configure sysctl for nf_conntrack_max (only if available)
          ansible.posix.sysctl:
            name: net.netfilter.nf_conntrack_max
            value: "2310720"
            state: present
            reload: true
          when: (nf_conntrack_sysctl.stat.exists |
            default(false)) or
            (lookup('ansible.builtin.file',
            '/proc/sys/net/netfilter/nf_conntrack_max',
            errors='ignore') is not none)

        # ---- persist sysctl ----
        - name: Persist sysctl changes
          ansible.builtin.copy:
            dest: /etc/sysctl.d/99-kubernetes-cri.conf
            content: |
              net.bridge.bridge-nf-call-iptables = 1
              net.ipv4.ip_forward = 1
              net.ipv6.conf.all.disable_ipv6 = 1
              net.ipv6.conf.default.disable_ipv6 = 1
              vm.swappiness = 0
              vm.overcommit_memory = 1
              vm.panic_on_oom = 0
              fs.inotify.max_user_instances = 8192
              fs.inotify.max_user_watches = 1048576
              fs.file-max = 52706963
              fs.nr_open = 52706963
              net.netfilter.nf_conntrack_max = 2310720
            backup: yes

        # ---- reboot if needed ----
        - name: Reboot if required
          ansible.builtin.reboot:
            msg: "Rebooting after Ubuntu 24 specific configurations"
            pre_reboot_delay: 5
            reboot_timeout: 300
            post_reboot_delay: 15
      when:
        - ansible_facts['os_family'] == "Debian"
        - ansible_facts['distribution'] == "Ubuntu"
        - ansible_facts['distribution_version'] is version('24.04', '==')
